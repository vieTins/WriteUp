# Encrypted flag data
encrypted_flag = [
    0x56, 0x9d, 0xb3, 0x85, 0xaf, 0x7f, 0xa0, 0x4b,
    0x83, 0x49, 0x76, 0xe0, 0x21, 0x78, 0x22, 0xed,
    0x0e, 0xd9, 0xfd, 0xf5, 0xb8, 0xb8, 0xd8, 0x1a,
    0x16, 0x93, 0x70, 0x07, 0x35, 0x34, 0x27, 0xc5,
    0x34, 0xba, 0x09, 0x74, 0xda, 0x68, 0xe8, 0x7e,
    0x6c, 0x8b, 0x9b, 0x83, 0x00, 0x00, 0x00, 0x00
]

# XOR key
xor_key = [
    0x84, 0xdb, 0xaf, 0xf2, 0x4e, 0xd0, 0xad, 0x20,
    0xd7, 0xa0, 0x18, 0xd7, 0x15, 0x52, 0x51, 0x7b,
    0x5b, 0x14, 0x26, 0xd1
]

# Rotate left function
def rol8(value, shift):
    shift = shift & 0x1F
    return ((value << shift) | (value >> (8 - shift))) & 0xFF

# Decrypt function
def decrypt_flag():
    flag = ""
    
    for i in range(44):  # Flag length is 44
        b2 = xor_key[(i * 7) % 20]
        b3 = rol8(xor_key[i % 20], (i * 3) & 7)
        shift = i % 5
        
        # Reverse the encryption
        decrypted_char = encrypted_flag[i] ^ b3 ^ (b2 >> shift)
        flag += chr(decrypted_char)
    
    return flag

# Decrypt and print the flag
decrypted_flag = decrypt_flag()
print("Flag:", decrypted_flag)